t import pandas as pd

# Load the Excel file
file_path = 'path_to_your_file.xlsx'
df = pd.read_excel(file_path, skiprows=1)

# Extract the relevant columns
dremio_tables = df.iloc[:, 0]
sql_tables = df.iloc[:, 6]
date_columns = df.columns[1:6]
sql_date_columns = df.columns[7:12]

# Initialize a list to store the results
results = []

# Function to safely convert to integer
def safe_int(value):
    try:
        return int(value)
    except (ValueError, TypeError):
        return 0

# Iterate over each row
for i in range(len(df)):
    dremio_table = dremio_tables[i]
    sql_table = sql_tables[i]
    row_result = {'Dremio': dremio_table, 'SQL': sql_table}
    
    for date_col, sql_date_col in zip(date_columns, sql_date_columns):
        dremio_count = df[date_col][i]
        sql_count = df[sql_date_col][i] if sql_date_col in df.columns else 'No data'
        
        if sql_count != 'No data':
            dremio_count = safe_int(dremio_count)
            sql_count = safe_int(sql_count)
            difference = dremio_count - sql_count
            if difference != 0:
                row_result[date_col] = str(difference)
            else:
                row_result[date_col] = '0'
        else:
            row_result[date_col] = 'No data'
    
    results.append(row_result)

# Create a DataFrame from the results
result_df = pd.DataFrame(results)

# Filter out rows where all differences are zero
filtered_df = result_df[(result_df[date_columns] != '0').any(axis=1)]

# Save the result to a new Excel file
filtered_df.to_excel('path_to_save_results.xlsx', index=False)


2nd option:
import pandas as pd

# Load the Excel file and skip the first row to start from subheaders
file_path = 'your_file.xlsx'
df = pd.read_excel(file_path, header=1)  # Adjust 'header=1' to skip the first row

# Convert string counts to integers
df.iloc[:, 1:6] = df.iloc[:, 1:6].apply(pd.to_numeric, errors='coerce')
df.iloc[:, 7:12] = df.iloc[:, 7:12].apply(pd.to_numeric, errors='coerce')

# Extract relevant columns
dremio_tables = df.iloc[:, 0]  # First column: Dremio tables
sql_tables = df.iloc[:, 6]    # Seventh column: SQL tables
dates_columns = df.columns[1:6]  # Columns with date headers for Dremio
sql_dates_columns = df.columns[7:12]  # Columns with date headers for SQL

# Initialize a result DataFrame
result = []

# Compare counts for each table pair and corresponding dates
for i in range(len(dremio_tables)):
    differences = {}
    for j, date in enumerate(dates_columns):
        dremio_count = df.iloc[i, j + 1]
        if date in sql_dates_columns:
            sql_index = sql_dates_columns.get_loc(date)
            sql_count = df.iloc[i, sql_index + 7]
        else:
            sql_count = None
        
        if pd.notna(dremio_count) and pd.notna(sql_count):
            diff = dremio_count - sql_count
            if diff != 0:
                differences[date] = str(diff)
        elif pd.isna(sql_count):
            differences[date] = "No data"
    
    if differences:
        result.append({
            "Dremio Table": dremio_tables[i],
            "SQL Table": sql_tables[i],
            **differences
        })

# Convert result to DataFrame and save or print it
result_df = pd.DataFrame(result)
print(result_df)

