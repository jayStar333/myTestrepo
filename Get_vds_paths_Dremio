import requests
import json

# Replace with your Dremio server URL and personal access token
dremio_url = "https://your-dremio-server.com"
headers = {
    "Authorization": "Bearer your_personal_access_token"
}

def get_catalog_items(catalog_id):
    url = f"{dremio_url}/api/v3/catalog/{catalog_id}"
    response = requests.get(url, headers=headers)
    if response.status_code == 200:
        return response.json()
    else:
        print(f"Error: {response.status_code} - {response.text}")
        return None

def list_containers(catalog_id):
    catalog_items = get_catalog_items(catalog_id)
    if not catalog_items:
        return []

    containers = []
    for item in catalog_items.get("children", []):
        if item["type"] == "CONTAINER":
            containers.append(item)
    return containers

def get_all_vds_paths(catalog_id, parent_path=""):
    catalog_items = get_catalog_items(catalog_id)
    if not catalog_items:
        return []

    vds_paths = []
    for item in catalog_items.get("children", []):
        item_path = f"{parent_path}/{item['path'][-1]}"
        if item["type"] == "VIRTUAL_DATASET":
            vds_paths.append(item_path)
        elif item["type"] == "CONTAINER":
            vds_paths.extend(get_all_vds_paths(item["id"], item_path))

    return vds_paths

def extract_last_two_values_from_path(path):
    components = path.strip("/").split("/")
    return components[-2:] if len(components) >= 2 else components

# Start from the root catalog
root_catalog = get_catalog_items("")
if root_catalog:
    print("Root catalog structure:", json.dumps(root_catalog, indent=2))  # Debugging step
    root_catalog_id = root_catalog.get("id")
    if root_catalog_id:
        containers = list_containers(root_catalog_id)
        print("Available containers:")
        for container in containers:
            print(f"ID: {container['id']}, Path: {'/'.join(container['path'])}")

        # Select a specific container by ID or path
        selected_container_id = "your_selected_container_id"  # Replace with the actual container ID
        vds_paths = get_all_vds_paths(selected_container_id)
        extracted_values = [extract_last_two_values_from_path(path) for path in vds_paths]

        # Print the extracted values
        for values in extracted_values:
            print(values)
    else:
        print("Root catalog ID not found.")
else:
    print("No catalogs found.")
