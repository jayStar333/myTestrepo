```python
import requests
import json

# Configuration
base_url = "http://dremio-server:9047"
username = "your_username"
password = "your_password"

# Authenticate and get token
auth_response = requests.post(
    f"{base_url}/apiv2/login",
    headers={"Content-Type": "application/json"},
    data=json.dumps({"userName": username, "password": password})
)
auth_token = auth_response.json()['token']

# Get list of virtual datasets
headers = {"Authorization": f"_dremio{auth_token}"}
vds_query = "SELECT dataset_name FROM your_dataset_list_table"
vds_response = requests.post(
    f"{base_url}/api/v3/sql",
    headers=headers,
    data=json.dumps({"sql": vds_query})
)
vds_list = vds_response.json()['rows']

# Query each virtual dataset and union results
union_queries = []
for vds in vds_list:
    dataset_name = vds['dataset_name']
    query = f"SELECT * FROM {dataset_name} WHERE your_conditions"
    union_queries.append(query)

# Combine queries with UNION ALL
final_query = " UNION ALL ".join(union_queries)

# Execute the final union query
final_response = requests.post(
    f"{base_url}/api/v3/sql",
    headers=headers,
    data=json.dumps({"sql": final_query})
)
results = final_response.json()['rows']

# Process results
for result in results:
    print(result)

```
##2nd Option:_____________________
import requests
import pandas as pd
import json

# Dremio connection details
base_url = 'http://your_dremio_host:9047'
username = 'your_username'
password = 'your_password'

# Authenticate and get the token
auth_response = requests.post(
    f'{base_url}/apiv2/login',
    headers={'Content-Type': 'application/json'},
    data=json.dumps({'userName': username, 'password': password})
)
auth_token = auth_response.json()['token']

# Headers for subsequent requests
headers = {
    'Content-Type': 'application/json',
    'Authorization': f'_dremio{auth_token}'
}

# SQL query to get the list of virtual datasets
list_query = "SELECT dataset_name FROM your_dataset_list_table"

# Execute the list query
list_response = requests.post(
    f'{base_url}/api/v3/sql',
    headers=headers,
    data=json.dumps({'sql': list_query})
)
datasets_df = pd.json_normalize(list_response.json()['rows'])
virtual_datasets = datasets_df['dataset_name'].tolist()

# SQL query template to run on each dataset
query_template = "SELECT * FROM {}"

# Collect results
results = []

for dataset in virtual_datasets:
    query = query_template.format(dataset)
    query_response = requests.post(
        f'{base_url}/api/v3/sql',
        headers=headers,
        data=json.dumps({'sql': query})
    )
    df = pd.json_normalize(query_response.json()['rows'])
    results.append(df)

# Union all results into a single DataFrame
final_result = pd.concat(results, ignore_index=True)

# Optionally, save the result to a CSV file
final_result.to_csv('final_result.csv', index=False)

print("Query results have been saved to 'final_result.csv'")
