1st option:
import pandas as pd

# Load the Excel file and skip the first row to start from subheaders
file_path = 'your_file.xlsx'
df = pd.read_excel(file_path, header=1)  # Adjust 'header=1' to skip the first row

# Extract relevant columns
dremio_tables = df.iloc[:, 0]  # First column: Dremio tables
sql_tables = df.iloc[:, 6]    # Seventh column: SQL tables
dates_columns = df.columns[1:6]  # Columns with date headers for Dremio
sql_dates_columns = df.columns[7:12]  # Columns with date headers for SQL

# Initialize a result DataFrame
result = []

# Compare counts for each table pair and corresponding dates
for i in range(len(dremio_tables)):
    differences = {}
    for j, date in enumerate(dates_columns):
        dremio_count = df.iloc[i, j + 1]
        sql_count = df.iloc[i, j + 7] if j + 7 < len(df.columns) else None
        
        if pd.notna(dremio_count) and pd.notna(sql_count):
            diff = dremio_count - sql_count
            if diff != 0:
                differences[date] = diff
        elif pd.isna(sql_count):
            differences[date] = "No data"
    
    if differences:
        result.append({
            "Dremio Table": dremio_tables[i],
            "SQL Table": sql_tables[i],
            **differences
        })

# Convert result to DataFrame and save or print it
result_df = pd.DataFrame(result)
print(result_df)

1st option(convert from string):
import pandas as pd

# Load the Excel file and skip the first row to start from subheaders
file_path = 'your_file.xlsx'
df = pd.read_excel(file_path, header=1)  # Adjust 'header=1' to skip the first row

# Convert string counts to integers
df.iloc[:, 1:6] = df.iloc[:, 1:6].apply(pd.to_numeric, errors='coerce')
df.iloc[:, 7:12] = df.iloc[:, 7:12].apply(pd.to_numeric, errors='coerce')

# Extract relevant columns
dremio_tables = df.iloc[:, 0]  # First column: Dremio tables
sql_tables = df.iloc[:, 6]    # Seventh column: SQL tables
dates_columns = df.columns[1:6]  # Columns with date headers for Dremio
sql_dates_columns = df.columns[7:12]  # Columns with date headers for SQL

# Initialize a result DataFrame
result = []

# Compare counts for each table pair and corresponding dates
for i in range(len(dremio_tables)):
    differences = {}
    for j, date in enumerate(dates_columns):
        dremio_count = df.iloc[i, j + 1]
        sql_count = df.iloc[i, j + 7] if j + 7 < len(df.columns) else None
        
        if pd.notna(dremio_count) and pd.notna(sql_count):
            diff = dremio_count - sql_count
            if diff != 0:
                differences[date] = str(diff)
        elif pd.isna(sql_count):
            differences[date] = "No data"
    
    if differences:
        result.append({
            "Dremio Table": dremio_tables[i],
            "SQL Table": sql_tables[i],
            **differences
        })

# Convert result to DataFrame and save or print it
result_df = pd.DataFrame(result)
print(result_df)




2nd option:
import pandas as pd

# Load the Excel file, skipping the first row
file_path = 'path_to_your_excel_file.xlsx'
df = pd.read_excel(file_path, skiprows=1)

# Assuming the structure of your DataFrame is as follows:
# | Dremio | Date1 | Date2 | Date3 | Date4 | Date5 | SQL | Date1 | Date2 | Date3 | Date4 | Date5 |
# Adjust the column names as necessary
df.columns = ['Dremio', 'Date1_Dremio', 'Date2_Dremio', 'Date3_Dremio', 'Date4_Dremio', 'Date5_Dremio', 
              'SQL', 'Date1_SQL', 'Date2_SQL', 'Date3_SQL', 'Date4_SQL', 'Date5_SQL']

# Calculate the differences for each date
df['Diff_Date1'] = df['Date1_Dremio'] - df['Date1_SQL']
df['Diff_Date2'] = df['Date2_Dremio'] - df['Date2_SQL']
df['Diff_Date3'] = df['Date3_Dremio'] - df['Date3_SQL']
df['Diff_Date4'] = df['Date4_Dremio'] - df['Date4_SQL']
df['Diff_Date5'] = df['Date5_Dremio'] - df['Date5_SQL']

# Replace NaN differences with "No data"
df['Diff_Date1'] = df['Diff_Date1'].fillna('No data')
df['Diff_Date2'] = df['Diff_Date2'].fillna('No data')
df['Diff_Date3'] = df['Diff_Date3'].fillna('No data')
df['Diff_Date4'] = df['Diff_Date4'].fillna('No data')
df['Diff_Date5'] = df['Diff_Date5'].fillna('No data')

# Filter out rows where all differences are zero or "No data"
filtered_df = df[(df['Diff_Date1'] != 0) & (df['Diff_Date1'] != 'No data') |
                 (df['Diff_Date2'] != 0) & (df['Diff_Date2'] != 'No data') |
                 (df['Diff_Date3'] != 0) & (df['Diff_Date3'] != 'No data') |
                 (df['Diff_Date4'] != 0) & (df['Diff_Date4'] != 'No data') |
                 (df['Diff_Date5'] != 0) & (df['Diff_Date5'] != 'No data')]

# Select relevant columns to display
result_df = filtered_df[['Dremio', 'SQL', 'Diff_Date1', 'Diff_Date2', 'Diff_Date3', 'Diff_Date4', 'Diff_Date5']]

# Display the result
print(result_df)
