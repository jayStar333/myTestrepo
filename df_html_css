import pandas as pd

# Sample DataFrame
data = {
    'old_name_1': [1, 2, 3],
    'old_name_2': [4, 5, 6],
    'old_name_3': [7, 8, 9]
}

df = pd.DataFrame(data)
# Exclude a specific string from headers
df.columns = [col.replace('old_', '') for col in df.columns]

df = pd.DataFrame(data)
# Exclude a specific string from headers
df.columns = [col.replace('old_', '') for col in df.columns]
# Strings to replace
replacements = {
    'old_': '',
    'name': 'column'
}

# Replace multiple strings in headers
for old, new in replacements.items():
    df.columns = [col.replace(old, new) for col in df.columns]

print(df)

# Convert DataFrame to HTML
html_table = df.to_html(index=False)

# Define CSS styles
css = """
<style>
table {
    width: 100%;
    border-collapse: collapse;
}
th, td {
    border: 1px solid black;
    padding: 8px;
    text-align: left;
}
th {
    background-color: #f2f2f2;
}
</style>
"""

# Add header and CSS to HTML table
html_output = f"""
<html>
<head>
<title>Styled DataFrame</title>
{css}
</head>
<body>
<h2>My DataFrame</h2>
{html_table}
</body>
</html>
"""

# Save to an HTML file
with open('styled_dataframe.html', 'w') as file:
    file.write(html_output)

#Freeze header on html table
#---------------------------------
# Define custom CSS for the table
css = """
<style>
table {
    width: 100%;
    border-collapse: collapse;
}
th, td {
    border: 1px solid black;
    padding: 8px;
    text-align: left;
}
th {
    background-color: #f2f2f2;
    position: sticky;
    top: 0;
    z-index: 1;
}
</style>
"""

# Convert the styled DataFrame to HTML
html_table = styled_df.to_html()

# Add the CSS to the HTML table
html_output = f"""
<html>
<head>
<title>Styled DataFrame</title>
{css}
</head>
<body>
<h2>My DataFrame</h2>
{html_table}
</body>
</html>
"""

# Save to an HTML file
with open('styled_dataframe.html', 'w') as file:
    file.write(html_output)


